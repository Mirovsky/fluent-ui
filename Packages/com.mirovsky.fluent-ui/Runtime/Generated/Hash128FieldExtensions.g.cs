// <auto-generated/>

namespace FluentUI
{
    using System;
    using UnityEngine;
    using UnityEngine.UIElements;

    public static class FluentUIHash128FieldExtensions
    {
        public static TVisualElement ValueWithoutNotify<TVisualElement>(this TVisualElement t, Hash128 newValue) where TVisualElement : Hash128Field
        {
            t.SetValueWithoutNotify(newValue);

            return t;
        }

        public static TVisualElement Value<TVisualElement>(this TVisualElement t, Hash128 value) where TVisualElement : Hash128Field
        {
            t.value = value;

            return t;
        }

        public static TVisualElement BindValue<TVisualElement>(this TVisualElement t, String propertyName, object localDataSource = null, BindingMode bindingMode = BindingMode.ToTarget) where TVisualElement : Hash128Field
        {
            t.SetBinding(Properties.value, BindingsRepository.GetCachedOrCreateBinding(propertyName, localDataSource, bindingMode));

            return t;
        }
    }
}
