// <auto-generated/>

namespace FluentUI
{
    using System;
    using System.Collections.Generic;
    using UnityEngine.UIElements;

    public static class FluentUIRadioButtonGroupExtensions
    {
        public static TVisualElement ValueWithoutNotify<TVisualElement>(this TVisualElement t, Int32 newValue) where TVisualElement : RadioButtonGroup
        {
            t.SetValueWithoutNotify(newValue);

            return t;
        }

        public static TVisualElement Choices<TVisualElement>(this TVisualElement t, IEnumerable<String> choices) where TVisualElement : RadioButtonGroup
        {
            t.choices = choices;

            return t;
        }

        public static TVisualElement BindChoices<TVisualElement>(this TVisualElement t, String propertyName, object localDataSource = null, BindingMode bindingMode = BindingMode.ToTarget) where TVisualElement : RadioButtonGroup
        {
            t.SetBinding(Properties.choices, BindingsRepository.GetCachedOrCreateBinding(propertyName, localDataSource, bindingMode));

            return t;
        }

        public static TVisualElement Value<TVisualElement>(this TVisualElement t, Int32 value) where TVisualElement : RadioButtonGroup
        {
            t.value = value;

            return t;
        }

        public static TVisualElement BindValue<TVisualElement>(this TVisualElement t, String propertyName, object localDataSource = null, BindingMode bindingMode = BindingMode.ToTarget) where TVisualElement : RadioButtonGroup
        {
            t.SetBinding(Properties.value, BindingsRepository.GetCachedOrCreateBinding(propertyName, localDataSource, bindingMode));

            return t;
        }
    }
}
