using System.CodeDom.Compiler;
using System.IO;

namespace FluentUI.Generator
{
    public class PropertiesWriter
    {
        private readonly PropertiesBuilder _builder;
        private readonly IndentedTextWriter _writer = new(new StringWriter(), "    ");

        public PropertiesWriter(PropertiesBuilder builder)
        {
            _builder = builder;
        }

        public string Write()
        {
            _writer.WriteLine("// <auto-generated/>");
            _writer.WriteLine();

            _writer.WriteLine("using UnityEngine.UIElements;");
            _writer.WriteLine();

            _writer.WriteLine($"namespace {_builder.Namespace}");
            _writer.WriteLine("{");
            _writer.Indent++;

            _writer.WriteLine("public static class Properties");
            _writer.WriteLine("{");
            _writer.Indent++;

            foreach (string stringName in _builder.FieldNames)
            {
                string bindingId = stringName.Replace("Property", "");
                string fieldName = GeneratorNamingUtils.GetPropertyFieldName(bindingId).Replace("Property", "");

                _writer.WriteLine($"public static readonly BindingId {fieldName} = (BindingId) \"{bindingId}\";");
            }

            _writer.Indent--;
            _writer.WriteLine("}");

            _writer.Indent--;
            _writer.WriteLine("}");

            return _writer.InnerWriter.ToString();
        }
    }
}
